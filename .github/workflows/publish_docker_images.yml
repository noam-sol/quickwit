name: Build and publish Docker images

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Set docker image tag'
        required: true
        default: 'vega_edge'
  # On push currently doesn't work, run manually.
  # push:
  #   branches:
  #     - vega-main
  #   paths:
  #     - "quickwit/**"
  #   tags:
  #     - airmail
  #     - happy-plazza
  #     - qw*
  #     - v*
env:
  REGISTRY_IMAGE: quickwit

permissions:
  id-token: write
  contents: read

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials - Production
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.IAM_ROLE_PROD }}
          aws-region: us-east-2

      - name: Login to Amazon ECR - Production
        id: login-ecr-prod
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.login-ecr-prod.outputs.registry }}/${{ env.REGISTRY_IMAGE }}
          labels: |
            org.opencontainers.image.title=Quickwit
            maintainer=Quickwit, Inc. <hello@quickwit.io>
            org.opencontainers.image.vendor=Quickwit, Inc.
            org.opencontainers.image.licenses=AGPL-3.0

      - name: Retrieve commit date, hash, and tags
        run: |
          echo "QW_COMMIT_DATE=$(TZ=UTC0 git log -1 --format=%cd --date=format-local:%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
          echo "QW_COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "QW_COMMIT_TAGS=$(git tag --points-at HEAD | tr '\n' ',')" >> $GITHUB_ENV

      - name: Set up tantivy SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.TANTIVY_SSH_KEY }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          platforms: linux/amd64
          ssh: default
          push: true
          build-args: |
            QW_COMMIT_DATE=${{ env.QW_COMMIT_DATE }}
            QW_COMMIT_HASH=${{ env.QW_COMMIT_HASH }}
            QW_COMMIT_TAGS=${{ env.QW_COMMIT_TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.login-ecr-prod.outputs.registry }}/${{ env.REGISTRY_IMAGE }}:${{ github.event.inputs.tag }}
          cache-from: type=registry,ref=${{ steps.login-ecr-prod.outputs.registry }}/${{ env.REGISTRY_IMAGE }}:cache
          cache-to: type=registry,ref=${{ steps.login-ecr-prod.outputs.registry }}/${{ env.REGISTRY_IMAGE }}:cache,mode=max,image-manifest=true,oci-mediatypes=true,compression=estargz,compression-level=9

  #     - name: Export digest
  #       run: |
  #         mkdir -p /tmp/digests
  #         digest="${{ steps.build.outputs.digest }}"
  #         touch "/tmp/digests/${digest#sha256:}"
  #
  #     - name: Upload digest
  #       uses: actions/upload-artifact@v4.4.3
  #       with:
  #         name: digest-${{ matrix.platform_suffix }}
  #         path: /tmp/digests/*
  #         if-no-files-found: error
  #         retention-days: 1
  #
  # merge:
  #   runs-on: ubuntu-latest
  #   needs: [docker]
  #   steps:
  #     - name: Download digests
  #       uses: actions/download-artifact@v4.1.8
  #       with:
  #         pattern: digest-*
  #         path: /tmp/digests
  #         merge-multiple: true
  #
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #
  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ${{ env.REGISTRY_IMAGE }}
  #         flavor: |
  #           latest=false
  #         tags: |
  #           type=edge,branch=main
  #           type=edge,branch=main,suffix=-slim-bookworm
  #           type=semver,pattern={{version}}
  #           type=semver,pattern={{version}},value=latest
  #           type=semver,pattern={{version}},suffix=-slim-bookworm
  #           type=ref,event=tag
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
  #     - name: Create manifest list and push tags
  #       working-directory: /tmp/digests
  #       run: |
  #         docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
  #           $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
  #     - name: Inspect image
  #       run: |
  #         docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
